// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

// Modelo de Usuário
model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  password  String
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relacionamentos
  alerts    Alert[]
  searches  Search[]
  favorites Favorite[]

  @@map("users")
}

// Modelo de Companhia Aérea
model Airline {
  id        String   @id @default(cuid())
  code      String   @unique // Ex: "LA", "G3", "AD"
  name      String   // Ex: "LATAM", "GOL", "Azul"
  country   String
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relacionamentos
  flights Flight[]

  @@map("airlines")
}

// Modelo de Aeroporto
model Airport {
  id        String   @id @default(cuid())
  code      String   @unique // Ex: "GRU", "CGH", "SDU"
  name      String   // Ex: "Guarulhos", "Congonhas"
  city      String   // Ex: "São Paulo"
  country   String   // Ex: "Brasil"
  timezone  String   // Ex: "America/Sao_Paulo"
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relacionamentos
  departureFlights Flight[] @relation("DepartureAirport")
  arrivalFlights   Flight[] @relation("ArrivalAirport")

  @@map("airports")
}

// Modelo de Voo
model Flight {
  id              String   @id @default(cuid())
  flightNumber    String   // Ex: "LA3001"
  airlineId       String
  departureId     String
  arrivalId       String
  departureTime   DateTime
  arrivalTime     DateTime
  duration        Int      // Em minutos
  stops           Int      @default(0)
  aircraft        String?  // Tipo de aeronave
  businessPrice   Decimal? // Preço classe executiva
  economyPrice    Decimal? // Preço classe econômica
  currency        String   @default("BRL")
  availableSeats  Int?
  baggageIncluded Boolean  @default(false)
  isActive        Boolean  @default(true)
  source          String   // API de origem (google, latam, gol, etc)
  externalId      String?  // ID na API externa
  lastUpdated     DateTime @default(now())
  createdAt       DateTime @default(now())
  
  // Novos campos para ofertas e busca flexível
  isOffer          Boolean  @default(false)
  originalPrice    Decimal?
  discountPercent  Float?
  offerValidUntil  DateTime?
  bookingUrl       String?  // URL direta para compra
  deepLinkUrl      String?  // Deep link da companhia
  flexibleDates    Boolean  @default(false)
  dateRange        Int?     // ±dias de flexibilidade
  offerSource      String?  // origem da oferta
  lastPriceCheck   DateTime @default(now())
  priceChangeAlert Boolean  @default(false)

  // Relacionamentos
  airline           Airline        @relation(fields: [airlineId], references: [id])
  departureAirport  Airport        @relation("DepartureAirport", fields: [departureId], references: [id])
  arrivalAirport    Airport        @relation("ArrivalAirport", fields: [arrivalId], references: [id])
  priceHistory      PriceHistory[]
  favorites         Favorite[]
  specialOffers     SpecialOffer[]

  @@map("flights")
}

// Histórico de Preços
model PriceHistory {
  id            String   @id @default(cuid())
  flightId      String
  businessPrice Decimal?
  economyPrice  Decimal?
  currency      String   @default("BRL")
  timestamp     DateTime @default(now())

  // Relacionamentos
  flight Flight @relation(fields: [flightId], references: [id], onDelete: Cascade)

  @@map("price_history")
}

// Modelo de Alerta
model Alert {
  id              String    @id @default(cuid())
  userId          String
  name            String    // Nome do alerta
  departureCode   String    // Código do aeroporto de origem
  arrivalCode     String    // Código do aeroporto de destino
  departureDate   DateTime? // Data específica ou null para qualquer data
  returnDate      DateTime? // Para voos de ida e volta
  maxPrice        Decimal?  // Preço máximo desejado
  minPrice        Decimal?  // Preço mínimo (para detectar promoções)
  currency        String    @default("BRL")
  classType       String    @default("business") // business, economy, both
  maxStops        Int?      // Número máximo de paradas
  preferredAirlines String? // JSON string com códigos de companhias preferidas
  isActive        Boolean   @default(true)
  emailNotification Boolean @default(true)
  pushNotification  Boolean @default(true)
  lastTriggered   DateTime?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  // Relacionamentos
  user            User            @relation(fields: [userId], references: [id], onDelete: Cascade)
  notifications   Notification[]

  @@map("alerts")
}

// Modelo de Notificação
model Notification {
  id        String   @id @default(cuid())
  alertId   String
  title     String
  message   String
  type      String   // email, push, webhook
  status    String   @default("pending") // pending, sent, failed
  sentAt    DateTime?
  createdAt DateTime @default(now())

  // Relacionamentos
  alert Alert @relation(fields: [alertId], references: [id], onDelete: Cascade)

  @@map("notifications")
}

// Modelo de Busca (Histórico)
model Search {
  id            String   @id @default(cuid())
  userId        String
  departureCode String
  arrivalCode   String
  departureDate DateTime
  returnDate    DateTime?
  passengers    Int      @default(1)
  classType     String   @default("business")
  resultsCount  Int      @default(0)
  createdAt     DateTime @default(now())

  // Relacionamentos
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("searches")
}

// Modelo de Favoritos
model Favorite {
  id        String   @id @default(cuid())
  userId    String
  flightId  String
  notes     String?
  createdAt DateTime @default(now())

  // Relacionamentos
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  flight Flight @relation(fields: [flightId], references: [id], onDelete: Cascade)

  @@unique([userId, flightId])
  @@map("favorites")
}

// Modelo de Ofertas Especiais
model SpecialOffer {
  id               String   @id @default(cuid())
  flightId         String
  title            String
  description      String?
  discountPercent  Float
  originalPrice    Decimal
  offerPrice       Decimal
  validFrom        DateTime
  validUntil       DateTime
  maxBookings      Int?
  currentBookings  Int      @default(0)
  isActive         Boolean  @default(true)
  createdAt        DateTime @default(now())
  
  flight           Flight   @relation(fields: [flightId], references: [id], onDelete: Cascade)
  
  @@map("special_offers")
}

// Modelo de Alertas de Preço
model PriceAlert {
  id               String   @id @default(cuid())
  route            String   // "GRU-JFK"
  targetPrice      Decimal
  currentPrice     Decimal?
  priceDropPercent Float?   // % de queda necessária
  isTriggered      Boolean  @default(false)
  lastCheck        DateTime @default(now())
  createdAt        DateTime @default(now())
  
  @@map("price_alerts")
}

// Modelo de Rotas Populares
model PopularRoute {
  id            String   @id @default(cuid())
  origin        String   // Código do aeroporto
  destination   String   // Código do aeroporto
  searchCount   Int      @default(1)
  avgPrice      Decimal?
  lastSearched  DateTime @default(now())
  createdAt     DateTime @default(now())
  
  @@unique([origin, destination])
  @@map("popular_routes")
}

// Modelo de Configuração do Sistema
model SystemConfig {
  id          String   @id @default(cuid())
  key         String   @unique
  value       String
  description String?
  updatedAt   DateTime @updatedAt

  @@map("system_config")
}